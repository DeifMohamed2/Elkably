<!DOCTYPE html>
<html lang="ar" dir="rtl">

<%- include("./partials/head.ejs") %>
<style>
    .separator-row {
        padding: 10px;
        border-bottom: 3px solid black;
        text-align: center;
        font-weight: bold;
        font-size: 1.2rem;
    }

    table {
        width: 100%; /* Ensures the table uses the full width */
        border-collapse: collapse; /* Prevents double borders */
    }

    th, td {
        padding: 10px; /* Consistent padding */
        text-align: left; /* Align text to the left for readability */
    }

    
</style>
</style>

    <body>
        <div class="container-fluid">
            <div class="row">
                <div class="col-lg-2">
                    <%- include("./partials/nav.ejs") %>
                </div>
                <!--------------------END ASIDE  ------------------>
                <!-- Modal -->



                <!--  END Modal -->
                <div class="col-lg-10 ">
                    <main>
                        <div class="row">
                            <div class="col-md-6">

                            </div>

                            <div class=" col-md-6 ">
                                <div class="left" style="margin-top: 0.2rem;">
                                    <%- include("./partials/top.ejs") %> 

                                </div>
                            </div>
                        </div>
                        <table id="convetToexcel" style="display: none;">

                        </table>
                        <div class="row">
                      
                           <div class="col-md-12  col-sm-12">
                                <h1>Attendance Data</h1>
                                <div class="row" dir="ltr">
                                    <div class="col-md-3">
                                        
                                        <label for="startDate">Start Date:</label>
                                        <input type="date" id="startDate" class="form-control">
                                        
                                    </div>
                                    <div class="col-md-3">
                                        <label for="endDate" >End Date:</label>
                                        <input type="date" id="endDate" class="form-control">

                                    </div>
                                    <div class="col-md-2">
                                        <div class="form-check mt-3">
                                            <input type="checkbox" class="form-check-input" id="fetchAllDates">
                                            <label class="form-check-label" for="fetchAllDates">Fetch All Dates</label>
                                        </div>

                                    </div>
                                </div>
                               
                             
                             
                                <button type="button" id="GetStudentData" class="btn btn-outline-warning btn-md me-3 mt-5">Get Data</button>

                                <div class="student-table ">
                                    <div class="d-flex gap-2 mb-3">
                                        <input type="text" class="serachOnaddCard form-control" name="attendeeID" id="attendeeID" placeholder="Student Code" required>
                                        <button type="button" id="searchStudentBtn" class="btn btn-primary">Search</button>
                                    </div>

                                    <div id="studentSummary" class="student-summary-card hidden">
                                        <div class="student-summary-grid">
                                            <div>
                                                <div class="label">Name</div>
                                                <div id="sName">-</div>
                                            </div>
                                            <div>
                                                <div class="label">Code</div>
                                                <div id="sCode">-</div>
                                            </div>
                                            <div>
                                                <div class="label">Center</div>
                                                <div id="sCenter">-</div>
                                            </div>
                                            <div>
                                                <div class="label">Group</div>
                                                <div id="sGroup">-</div>
                                            </div>
                                            <div>
                                                <div class="label">Absences</div>
                                                <div id="sAbsences">0</div>
                                            </div>
                                            <div>
                                                <div class="label">Amount</div>
                                                <div id="sAmount">0</div>
                                            </div>
                                            <div>
                                                <div class="label">Remaining</div>
                                                <div id="sRemaining">0</div>
                                            </div>
                                            <div class="actions">
                                                <button type="button" id="assignGroupBtn" class="btn btn-outline-info hidden">Assign to Group</button>
                                            </div>
                                        </div>
                                    </div>
                                    
                                    <table id="myTable">
                                        <thead>
                                            <th style="padding: 10px;">#</th>
                                            <th style="padding-left: 20px;">Center Name</th>
                                            <th style="padding-left: 20px;">Group Time</th>
                                            <th style="padding-left: 20px;">Date</th>
                                            <th style="padding-left: 20px;">Attendance Status</th>
                                        </thead>
                                        <tbody></tbody>
                                    </table>
                                    <div class="mt-2">
                                        <input type="text" id="tableFilter" class="form-control" placeholder="Filter table (status/date)">
                                    </div>
                                </div>
                            </div>


                            <div class="pagination justify-content-between mb-5">
            
                                <div class="mx-auto">
                                
                                        <button id="ConvertToExcel" class="paginationBtns">Convert To Excel And Send Copy To Parent</button> 
                              
                                </div>

                            </div>
                        </div>   
                    </main>
                </div>

                <!-------------------- END OF MAIN --------------------->

            </div>
        </div>



        <script src="/assest/bootstrap.bundle.min.js"></script>
        <script src="/assest/bootstrap.min.js"></script>

 <script>
const GetStudentData = document.getElementById('GetStudentData');
const attendeeID = document.getElementById('attendeeID');
const startDate = document.getElementById('startDate');
const endDate = document.getElementById('endDate');
const fetchAllDates = document.getElementById('fetchAllDates');
const searchStudentBtn = document.getElementById('searchStudentBtn');
const studentSummary = document.getElementById('studentSummary');
const assignGroupBtn = document.getElementById('assignGroupBtn');
const tableFilter = document.getElementById('tableFilter');

let currentStudent = null;

searchStudentBtn.addEventListener('click', async () => {
    try {
        const code = attendeeID.value?.trim();
        if (!code) return;
        const res = await fetch(`/teacher/advancedStudentSearch/${encodeURIComponent(code)}`);
        const data = await res.json();
        if (!res.ok) {
            alert(data.message || 'Not found');
            return;
        }
        currentStudent = data;
        // Fill summary
        document.getElementById('sName').innerText = data.Username || '-';
        document.getElementById('sCode').innerText = data.Code || '-';
        document.getElementById('sCenter').innerText = data.centerName || '-';
        document.getElementById('sGroup').innerText = data.groupTime ? `${data.Grade || ''} ${data.gradeType || ''} - ${data.groupTime}` : '-';
        document.getElementById('sAbsences').innerText = data.absences ?? 0;
        document.getElementById('sAmount').innerText = data.balance ?? 0;
        document.getElementById('sRemaining').innerText = data.amountRemaining ?? 0;
        studentSummary.classList.remove('hidden');

        // Show assign button only if not in group
        const hasGroup = Boolean(data.centerName && data.Grade && data.gradeType && data.groupTime);
        if (!hasGroup) {
            assignGroupBtn.classList.remove('hidden');
        } else {
            assignGroupBtn.classList.add('hidden');
        }
    } catch (e) {
        console.error(e);
        alert('Failed to fetch student');
    }
});

GetStudentData.addEventListener('click', async () => {
    try {
        let url = `/teacher/myStudent/getStudentData/${attendeeID.value}`;
        
        // If "Fetch All Dates" is not checked, add date range to the URL
        if (!fetchAllDates.checked) {
            const start = startDate.value;
            const end = endDate.value;
            
            if (start && end) {
                url += `?start=${start}&end=${end}`;
            }
        }

        const response = await fetch(url);
        if (!response.ok) {
            throw new Error('Network response was not ok');
        }
        const data = await response.json();
        console.log(data);

        const table = document.querySelector('table tbody');
        table.innerHTML = '';  // Clear table before populating

        let lastCenterName = '';  // Track last center name to avoid duplication
        let lastGroupTime = '';   // Track last group time to avoid duplication

        data.attendanceHistory.forEach((item, index) => {
            // Add a separator row when the center or group changes
            if (item.centerName !== lastCenterName || item.groupTime !== lastGroupTime) {
                const separatorRow = document.createElement('tr');
                separatorRow.innerHTML = `
                    <td colspan="5" class="separator-row">
                        ${data.centerName} - Group Time: ${data.groupTime}
                    </td>
                `;
                table.appendChild(separatorRow);
            }

            let statusColor = '';
            if (item.status === "Present") {
                statusColor = '#42ff04';
            } else if (item.status === "Absent") {
                statusColor = '#ff0404';
            } else {
                statusColor = '#ffd904';
            }
            // Create a row for each student's attendance record
            const row = document.createElement('tr');
            row.innerHTML = `
                <td>${index + 1}</td>
                <td>${item.centerName || data.centerName || '----'}</td>
                <td>${item.groupTime || data.groupTime || '----'}</td>
                <td dir='ltr'>${item.date} - ${item.time}</td>
                <td style="font-weight: bold; font-size:20px; color:${statusColor};">
                    ${item.status}
                </td>
            `;
            table.appendChild(row);

            // Update lastCenterName and lastGroupTime
            lastCenterName = item.centerName;
            lastGroupTime = item.groupTime;
        });

        // Add an empty row for spacing at the end
        const spacingRow = document.createElement('tr');
        spacingRow.innerHTML = `<td colspan="5" style="height: 20px;"></td>`;
        table.appendChild(spacingRow);

    } catch (error) {
        console.error('Error fetching student data:', error);
        alert('Failed to fetch student data. Please try again later.');
    }
});

// Simple client-side filter for table rows
tableFilter.addEventListener('input', () => {
    const q = tableFilter.value.toLowerCase();
    const rows = document.querySelectorAll('#myTable tbody tr');
    rows.forEach(r => {
        const text = r.innerText.toLowerCase();
        r.style.display = text.includes(q) ? '' : 'none';
    });
});

// Assignment UI moved to studentsRequests.ejs

    const ConvertToExcel = document.getElementById('ConvertToExcel');

  ConvertToExcel.addEventListener('click', async () => {
    try {
        const response = await fetch(`/teacher/myStudent/convertToExcel/${attendeeID.value}`);
        
        // Ensure the response is OK and is of type blob
        if (!response.ok || response.headers.get('Content-Type') !== 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet') {
            throw new Error('Network response was not ok');
        }

        // Convert the response to a blob
        const blob = await response.blob();

        // Create a URL for the blob and initiate a download
        const url = window.URL.createObjectURL(blob);
        const a = document.createElement('a');
        a.href = url;
        a.download = 'attendance_data.xlsx';
        document.body.appendChild(a);
        a.click();

        // Clean up by removing the link and revoking the object URL
        document.body.removeChild(a);
        window.URL.revokeObjectURL(url);

    } catch (error) {
        console.error('Error converting to Excel:', error);
        alert('Failed to convert to Excel. Please try again later.');
    }
});


</script>



    </body>


</html>