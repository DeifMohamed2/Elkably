<!DOCTYPE html>
<html lang="ar" dir="rtl">

    <%- include("./partials/head.ejs") %>

<style>
:root {
    --dark-bg: #121212;
    --dark-card-bg: #1e1e1e;
    --dark-text: #e0e0e0;
    --dark-border: #333;
    --dark-input-bg: #2d2d2d;
    --dark-hover: #2c2c2c;
    --dark-primary: #3a7bd5;
    --dark-secondary: #4d4d4d;
    --dark-success: #28a745;
    --dark-danger: #dc3545;
    --dark-warning: #ffc107;
    --dark-info: #17a2b8;
}

body {
    background-color: var(--dark-bg);
    color: var(--dark-text);
}

.container-fluid {
    background-color: var(--dark-bg);
}

.card {
    background-color: var(--dark-card-bg);
    border-color: var(--dark-border);
}

.card-header {
    background-color: var(--dark-secondary);
    border-color: var(--dark-border);
}

.modal-content {
    background-color: var(--dark-card-bg);
    border-color: var(--dark-border);
}

.modal-header, .modal-footer {
    background-color: var(--dark-secondary);
    border-color: var(--dark-border);
}

.list-group-item {
    background-color: var(--dark-card-bg);
    border-color: var(--dark-border);
    color: var(--dark-text);
}

.form-control, select, input, .modal-input, .Grade {
    background-color: var(--dark-input-bg);
    border-color: var(--dark-border);
    color: var(--dark-text);
}

.form-control:focus, select:focus, input:focus {
    background-color: var(--dark-input-bg);
    color: var(--dark-text);
    border-color: var(--dark-primary);
    box-shadow: 0 0 0 0.2rem rgba(58, 123, 213, 0.25);
}

.btn-primary {
    background-color: var(--dark-primary);
    border-color: var(--dark-primary);
}

.btn-secondary {
    background-color: var(--dark-secondary);
    border-color: var(--dark-secondary);
}

.btn-danger {
    background-color: var(--dark-danger);
    border-color: var(--dark-danger);
}

.btn-outline-warning {
    color: var(--dark-warning);
    border-color: var(--dark-warning);
}

.btn-outline-warning:hover {
    background-color: var(--dark-warning);
    color: var(--dark-bg);
}

.btn-outline-primary {
    color: var(--dark-primary);
    border-color: var(--dark-primary);
}

.btn-outline-primary:hover {
    background-color: var(--dark-primary);
    color: var(--dark-text);
}

.btn-outline-danger {
    color: var(--dark-danger);
    border-color: var(--dark-danger);
}

.btn-outline-danger:hover {
    background-color: var(--dark-danger);
    color: var(--dark-text);
}

table {
    color: var(--dark-text);
}

table thead th {
    background-color: var(--dark-secondary);
    color: var(--dark-text);
}

table tbody tr {
    background-color: var(--dark-card-bg);
}

table tbody tr:nth-child(odd) {
    background-color: var(--dark-bg);
}

table tbody tr:hover {
    background-color: var(--dark-hover);
}

.pagination button, .paginationBtns {
    background-color: var(--dark-secondary);
    color: var(--dark-text);
    border-color: var(--dark-border);
}

.pagination button:hover, .paginationBtns:hover {
    background-color: var(--dark-primary);
}

.group {
    display: flex;
    flex-direction: column; /* Stack elements vertically */
    gap: 10px; /* Add some space between elements */
    max-width: 300px; /* Set a maximum width to keep it contained */
}

.group label, .group select {
    width: 100%; /* Make labels and selects take up the full width */
}

.spinner {
    width: 56px;
    height: 56px;
    border-radius: 50%;
    border: 9px solid;
    border-color: #333;
    border-right-color: var(--dark-primary);
    animation: spinner-d3wgkg 1s infinite linear;
}

@keyframes spinner-d3wgkg {
    to {
      transform: rotate(1turn);
    }
}

/* Dark mode for advanced search card */
#advancedSearchForm label {
    color: var(--dark-text);
}

#studentDetailsContainer .list-group-item {
    display: flex;
    justify-content: space-between;
    background-color: var(--dark-card-bg);
}

#studentDetailsContainer .list-group-item span {
    color: var(--dark-text);
}

#studentDetailsContainer .list-group-item strong {
    color: var(--dark-primary);
}

.bg-success {
    background-color: var(--dark-success) !important;
}

.bg-primary {
    background-color: var(--dark-primary) !important;
}

.close-modal {
    color: var(--dark-text);
}

/* Blocking styles */
.badge {
    font-size: 0.8em;
    padding: 0.4em 0.6em;
}

.bg-danger {
    background-color: var(--dark-danger) !important;
}

.bg-success {
    background-color: var(--dark-success) !important;
}

.bg-warning {
    background-color: var(--dark-warning) !important;
}

.bg-info {
    background-color: var(--dark-info) !important;
}

.alert {
    border-radius: 8px;
    margin-bottom: 1rem;
}

.alert-warning {
    background-color: rgba(255, 193, 7, 0.1);
    border-color: var(--dark-warning);
    color: var(--dark-warning);
}

.alert-info {
    background-color: rgba(23, 162, 184, 0.1);
    border-color: var(--dark-info);
    color: var(--dark-info);
}

.alert-danger {
    background-color: rgba(220, 53, 69, 0.1);
    border-color: var(--dark-danger);
    color: var(--dark-danger);
}

.table-responsive {
    background-color: var(--dark-card-bg);
    border-radius: 8px;
    overflow: hidden;
}

.table {
    color: var(--dark-text);
    margin-bottom: 0;
}

.table thead th {
    background-color: var(--dark-secondary);
    color: var(--dark-text);
    border-color: var(--dark-border);
}

.table tbody td {
    border-color: var(--dark-border);
}

.text-danger {
    color: var(--dark-danger) !important;
}

.text-success {
    color: var(--dark-success) !important;
}

/* Table button styles */
.btn-sm {
    padding: 0.25rem 0.5rem;
    font-size: 0.875rem;
    border-radius: 0.2rem;
}

.enter {
    text-align: center;
}

.enter button {
    margin: 2px;
}
/* Inline quick filter for table */
#tableFilterInline {
    background-color: var(--dark-input-bg);
    border-color: var(--dark-border);
    color: var(--dark-text);
}

/* Responsive table */
@media (max-width: 768px) {
    .btn-sm {
        padding: 0.2rem 0.4rem;
        font-size: 0.8rem;
    }
    
    .enter button {
        margin: 1px;
    }
}

/* Enhanced Modal Styles */
.modal-dialog-centered {
    display: flex;
    align-items: center;
    min-height: calc(100% - 1rem);
}

.modal-header {
    border-bottom: 2px solid var(--dark-border);
    padding: 1.5rem;
}

.modal-header .modal-title {
    font-weight: 600;
    font-size: 1.5rem;
}

.modal-body {
    padding: 2rem;
}

.modal-footer {
    border-top: 2px solid var(--dark-border);
    padding: 1.5rem;
}

/* Student Info Card */
.student-info-card {
    background: linear-gradient(135deg, var(--dark-card-bg) 0%, var(--dark-bg) 100%);
    border: 2px solid var(--dark-border);
    border-radius: 15px;
    padding: 2rem;
    margin-bottom: 1rem;
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
}

.student-name {
    color: var(--dark-primary);
    font-weight: 700;
    font-size: 1.8rem;
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
}

.divider {
    height: 2px;
    background: linear-gradient(90deg, transparent 0%, var(--dark-primary) 50%, transparent 100%);
    margin: 1rem 0;
    border-radius: 1px;
}

/* Reason Section */
.reason-section {
    background: var(--dark-card-bg);
    border: 2px solid var(--dark-border);
    border-radius: 15px;
    padding: 2rem;
    margin: 1.5rem 0;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
}

.reason-section label {
    font-weight: 700;
    font-size: 1.2rem;
    color: var(--dark-text);
    margin-bottom: 1rem;
    display: block;
    text-align: right;
}

.reason-textarea {
    border: 2px solid var(--dark-border);
    border-radius: 12px;
    background: var(--dark-input-bg);
    color: var(--dark-text);
    font-size: 1rem;
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    transition: all 0.3s ease;
    resize: vertical;
    min-height: 140px;
    width: 100%;
    padding: 1rem;
    line-height: 1.6;
    box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.1);
}

.reason-textarea:focus {
    border-color: var(--dark-primary);
    box-shadow: 0 0 0 0.3rem rgba(58, 123, 213, 0.15), inset 0 2px 4px rgba(0, 0, 0, 0.1);
    background: var(--dark-input-bg);
    color: var(--dark-text);
    outline: none;
}

.reason-textarea::placeholder {
    color: var(--dark-secondary);
    opacity: 0.7;
    font-style: italic;
}

.form-text {
    color: var(--dark-secondary);
    font-size: 0.95rem;
    margin-top: 1rem;
    padding: 0.75rem;
    background: rgba(0, 0, 0, 0.1);
    border-radius: 8px;
    border-left: 3px solid var(--dark-primary);
}

/* Enhanced Alerts */
.alert {
    border-radius: 12px;
    border: none;
    padding: 1.5rem;
    margin: 1rem 0;
    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.1);
}

.alert-warning {
    background: linear-gradient(135deg, rgba(255, 193, 7, 0.1) 0%, rgba(255, 193, 7, 0.05) 100%);
    border-left: 4px solid var(--dark-warning);
    color: var(--dark-warning);
}

.alert-success {
    background: linear-gradient(135deg, rgba(40, 167, 69, 0.1) 0%, rgba(40, 167, 69, 0.05) 100%);
    border-left: 4px solid var(--dark-success);
    color: var(--dark-success);
}

.alert ul {
    padding-left: 1.5rem;
}

.alert li {
    margin-bottom: 0.5rem;
    line-height: 1.5;
}

/* Enhanced Buttons */
.btn-lg {
    padding: 0.75rem 1.5rem;
    font-size: 1.1rem;
    font-weight: 600;
    border-radius: 8px;
    transition: all 0.3s ease;
    text-transform: none;
    letter-spacing: 0.5px;
}

.btn-lg:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
}

.btn-warning {
    background: linear-gradient(135deg, var(--dark-warning) 0%, #e0a800 100%);
    border: none;
    color: #000;
}

.btn-success {
    background: linear-gradient(135deg, var(--dark-success) 0%, #1e7e34 100%);
    border: none;
    color: #fff;
}

.btn-secondary {
    background: linear-gradient(135deg, var(--dark-secondary) 0%, #5a5a5a 100%);
    border: none;
    color: var(--dark-text);
}

/* Modal Animation */
.modal.fade .modal-dialog {
    transition: transform 0.3s ease-out;
    transform: translate(0, -50px);
}

.modal.show .modal-dialog {
    transform: none;
}

/* Responsive Modal */
@media (max-width: 768px) {
    .modal-dialog {
        margin: 0.5rem;
    }
    
    .modal-body {
        padding: 1rem;
    }
    
    .student-info-card {
        padding: 1rem;
    }
    
    .student-name {
        font-size: 1.4rem;
    }
    
    .reason-section {
        padding: 1rem;
        margin: 1rem 0;
    }
    
    .reason-textarea {
        min-height: 120px;
        padding: 0.75rem;
        font-size: 0.95rem;
    }
    
    .btn-lg {
        padding: 0.5rem 1rem;
        font-size: 1rem;
    }
}

</style>
<body>
    <div class="container-fluid">
        <div class="row">
            <div class="col-lg-2" >
                <%- include("./partials/nav.ejs") %>
            </div>
            <!--------------------END ASIDE  ------------------>
   <!-- Modal -->

                
   <div class="modal fade show" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="false">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h2 class="modal-title" id="exampleModalLabel"> Update Data</h2>
                <i class="fa-solid fa-xmark close-modal" data-bs-dismiss="modal" aria-label="Close"></i>
            </div>
            <form  id="formModalDataUpdate">

              <div class="spinner mx-auto" id="spinner"></div>
              <div class="modal-body">


                      <label for="ModalUserName">اسم الطالب : </label> 
                      <input type="text" id="ModalUserName" class="modal-input" name="Username" value=""> <br>
                      
                  
                      <label for="ModalUserphone">رقم هاتف الطالب : </label> 
                      <input type="tel" id="ModalUserphone" class="modal-input"name="phone" value=""> <br>
                      
      

                      <label for="ModalParentUserphone">رقم هاتف ولي امر الطالب : </label> 
                      <input type="tel" id="ModalParentUserphone" class="modal-input" name="parentPhone" value=""> <br>
                      
                      <label for="ModalUserAmount">Amount : </label>
                      <input type="tel" id="ModalUserAmount" class="modal-input" name="balance" value=""> <br>
              
                      <label for="amountRemaining">Amount Remaining : </label>
                      <input type="tel" id="amountRemaining" class="modal-input" name="amountRemaining" value=""> <br>

                      <label for="absences">Absences : </label>
                      <input type="number" id="absences" class="modal-input" name="absences" value=""> <br>

                  <label for="GradeLevel">Grade Level:</label>
                    <select name="GradeLevel" id="GradeLevel" class="modal-input Grade w-75" required>
                      <option value="10" >Grade 10</option>
                      <option value="11" >Grade 11</option>
                      <option value="12" >Grade 12</option>
                    </select>

                  <label for="attendingType">Attending Type:</label>
                  <select name="attendingType" id="attendingType" class="modal-input Grade w-75" required>
                    <option value="HomeSchooling" >Home Schooling</option>
                    <option value="Attending" >Attending</option>
                  </select>

                  <label for="bookTaken"> Book Taken </label>
                  <select name="bookTaken" id="bookTaken" class="modal-input Grade w-75" required>
                    <option value="true">Yes</option>
                    <option value="false">No</option>
                  </select>

                    <label for="ModalSchoolName">School Name :</label> 
                    <input type="text" id="schoolName" class="modal-input" name="schoolName" value=""> <br>
                    <input type="text" id="StudentID" class="d-none" value="">
                    <!-- <button type="button" class="btn btn-outline-primary" id="transferStudent">نقل الطالب الي</button>

                    <div class="group d-none" id="selectionGroup">
                      
                          <label for="centerName">Center Name</label>
                          <select name="centerName" id="centerNameToUpdate" class="Grade"  >
                              <option value="">Center Name</option>
                              <option value="GTA">GTA</option>
                              <option value="tagmo3">Tagmo3</option>
                          </select>

                          <label for="Grade">Grade</label>
                          <select name="Grade" id="GradeToUpdate" class="Grade" >
                              <option value="">Grade</option>
                          </select>

                          <label for="gradeType">Grade Type</label>
                          <select name="gradeType" id="gradeTypeToUpdate" class="Grade" >
                              <option value="">Grade Type</option>
                          </select>

                          <label for="groupTime">Group Time</label>
                          <select name="groupTime" id="groupTimeToUpdate" class="Grade" >
                              <option value="">Group Time</option>
                          </select>


                    </div> -->

              </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" >Close</button>
                <button type="submit"  class="btn btn-primary" data-bs-dismiss="modal">Update </button>
            </div>

        </form>
        </div>
    </div>
    </div>


    <div class="modal fade show" id="exampleModal2" tabindex="-1" aria-labelledby="exampleModalLabel2" aria-hidden="false">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h2 class="modal-title" id="exampleModalLabel2"> مسح طالب</h2>
                    <i class="fa-solid fa-xmark close-modal" data-bs-dismiss="modal" aria-label="Close"></i>
                </div>
                <form id="deleteForm"  method="post">
    
                <div class="modal-body">
                  <h2>  هل تريد مسح الطالب نهائياً ؟</h2>
                  
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" window.location.herf="/teacher/studentsRequests">Close</button>
                    <button type="submit"  class="btn btn-primary" >Yes </button>
                </div>
            </form>
            </div>
        </div>
        </div>

    <!-- Block Student Modal -->
    <div class="modal fade show" id="blockStudentModal" tabindex="-1" aria-labelledby="blockStudentModalLabel" aria-hidden="false">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header bg-warning text-dark">
                    <div class="d-flex align-items-center">
                        <i class="fa-solid fa-ban me-3" style="font-size: 1.5rem;"></i>
                        <h2 class="modal-title mb-0" id="blockStudentModalLabel">إيقاف الطالب</h2>
                    </div>
                    <i class="fa-solid fa-xmark close-modal" data-bs-dismiss="modal" aria-label="Close"></i>
                </div>
                <form id="blockStudentForm">
                    <div class="modal-body">
                        <div class="text-center mb-4">
                            <div class="student-info-card">
                                <i class="fa-solid fa-user-graduate mb-3" style="font-size: 3rem; color: var(--dark-primary);"></i>
                                <h4 class="mb-2">هل تريد إيقاف الطالب</h4>
                                <h3 class="student-name mb-3" id="blockStudentName"></h3>
                                <div class="divider"></div>
                            </div>
                        </div>
                        
                        <div class="reason-section">
                            <label for="blockReason" class="form-label">
                                <i class="fa-solid fa-comment-dots me-2"></i>
                                سبب الإيقاف:
                            </label>
                            <textarea 
                                class="form-control modal-input reason-textarea" 
                                id="blockReason" 
                                name="reason" 
                                rows="4" 
                                cols="7"
                                placeholder="يرجى كتابة سبب الإيقاف بالتفصيل..."
                                required
                            ></textarea>
                            <div class="form-text">
                                <i class="fa-solid fa-info-circle me-1"></i>
                                هذا السبب سيتم إرساله إلى ولي أمر الطالب
                            </div>
                        </div>
                        
                        <div class="alert alert-warning mt-4">
                            <div class="d-flex align-items-start">
                                <i class="fa-solid fa-triangle-exclamation me-3 mt-1" style="font-size: 1.2rem;"></i>
                                <div>
                                    <strong>تنبيه مهم:</strong>
                                    <ul class="mb-0 mt-2">
                                        <li>سيتم إرسال رسالة إلى ولي أمر الطالب بإشعار الإيقاف</li>
                                        <li>الطالب لن يتمكن من الحضور حتى يتم إعادة تفعيله</li>
                                        <li>سيتم تسجيل هذا الإجراء في سجل الإيقافات</li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary btn-lg" data-bs-dismiss="modal">
                            <i class="fa-solid fa-times me-2"></i>إلغاء
                        </button>
                        <button type="submit" class="btn btn-warning btn-lg">
                            <i class="fa-solid fa-ban me-2"></i>إيقاف الطالب
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Unblock Student Modal -->
    <div class="modal fade show" id="unblockStudentModal" tabindex="-1" aria-labelledby="unblockStudentModalLabel" aria-hidden="false">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header bg-success text-white">
                    <div class="d-flex align-items-center">
                        <i class="fa-solid fa-check-circle me-3" style="font-size: 1.5rem;"></i>
                        <h2 class="modal-title mb-0" id="unblockStudentModalLabel">إعادة تفعيل الطالب</h2>
                    </div>
                    <i class="fa-solid fa-xmark close-modal" data-bs-dismiss="modal" aria-label="Close"></i>
                </div>
                <form id="unblockStudentForm">
                    <div class="modal-body">
                        <div class="text-center mb-4">
                            <div class="student-info-card">
                                <i class="fa-solid fa-user-check mb-3" style="font-size: 3rem; color: var(--dark-success);"></i>
                                <h4 class="mb-2">هل تريد إعادة تفعيل الطالب</h4>
                                <h3 class="student-name mb-3" id="unblockStudentName"></h3>
                                <div class="divider"></div>
                            </div>
                        </div>
                        
                        <div class="reason-section">
                            <label for="unblockReason" class="form-label">
                                <i class="fa-solid fa-comment-dots me-2"></i>
                                سبب إعادة التفعيل (اختياري):
                            </label>
                            <textarea 
                                class="form-control modal-input reason-textarea" 
                                id="unblockReason" 
                                name="reason" 
                                rows="4" 
                                cols="7"
                                placeholder="يرجى كتابة سبب إعادة التفعيل (اختياري)..."
                            ></textarea>
                            <div class="form-text">
                                <i class="fa-solid fa-info-circle me-1"></i>
                                هذا السبب اختياري وسيتم إرساله إلى ولي أمر الطالب
                            </div>
                        </div>
                        
                        <div class="alert alert-success mt-4">
                            <div class="d-flex align-items-start">
                                <i class="fa-solid fa-check-circle me-3 mt-1" style="font-size: 1.2rem;"></i>
                                <div>
                                    <strong>معلومات مهمة:</strong>
                                    <ul class="mb-0 mt-2">
                                        <li>سيتم إرسال رسالة إلى ولي أمر الطالب بإشعار إعادة التفعيل</li>
                                        <li>الطالب سيكون قادراً على الحضور مرة أخرى</li>
                                        <li>سيتم تسجيل هذا الإجراء في سجل الإيقافات</li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary btn-lg" data-bs-dismiss="modal">
                            <i class="fa-solid fa-times me-2"></i>إلغاء
                        </button>
                        <button type="submit" class="btn btn-success btn-lg">
                            <i class="fa-solid fa-check me-2"></i>إعادة التفعيل
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Block History Modal -->
    <div class="modal fade show" id="blockHistoryModal" tabindex="-1" aria-labelledby="blockHistoryModalLabel" aria-hidden="false">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h2 class="modal-title" id="blockHistoryModalLabel">سجل الإيقافات</h2>
                    <i class="fa-solid fa-xmark close-modal" data-bs-dismiss="modal" aria-label="Close"></i>
                </div>
                <div class="modal-body">
                    <h4>سجل الإيقافات للطالب: <span id="historyStudentName"></span></h4>
                    <div id="blockHistoryContent">
                        <div class="text-center">
                            <div class="spinner mx-auto"></div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">إغلاق</button>
                </div>
            </div>
        </div>
    </div>

<!--  END Modal -->
            <div class="col-lg-10 ">
                <main>
                    <div class="row">
                        <div class="col-md-8">
                            <form action="/teacher/studentsRequests" method="get">

                                 <select name="centerName" class="Grade" id="centerName" value="" required>
                                        <option value=""> اختر السنتر </option>
                                        <option value="GTA">GTA</option>
                                        <option value="tagmo3">Tagmo3</option>
                                        <option value="Online">Online</option>
                                    </select>
                                    <select name="Grade" id="Grade" class="Grade" value="" required>
                                            <option value=""> اختر الصف </option>
                                     
                                    </select>

                                    <select name="gradeType"  class="Grade"  id="gradeType" value="" required>
                                        <option value=""> Type</option>
                                    </select>


                                    <select name="groupTime" class="Grade" id="groupTime" value="" required>
                                        <option value=""> Group Time </option>
                                    </select>

                                    <select name="attendingType" class="Grade" id="attendingType" value="">
                                        <option value=""> Attending Type </option>
                                        <option value="HomeSchooling">Home Schooling</option>
                                        <option value="Attending">Attending</option>
                                    </select>

                                    <select name="GradeLevel" class="Grade" id="GradeLevel" value="">
                                      <option value=""> Grade Level</option>
                                      <option value="10">Grade 10</option>
                                      <option value="11">Grade 11</option>
                                      <option value="12">Grade 12</option>
                                    </select>

                                  <button class="btn btn-outline-warning me-5 mt-4" >Get Data</button>
                     
                            </form>
                        </div>
                    </div>
                    
                    <!-- Advanced Search Card -->
                    <div class="row mt-4">
                        <div class="col-md-12">
                            <div class="card">
                                <div class="card-header bg-primary text-white">
                                    <h5 class="mb-0">بحث متقدم عن طالب</h5>
                                </div>
                                <div class="card-body">
                                    <form id="advancedSearchForm">
                                        <div class="row">
                                            <div class="col-md-6">
                                                <div class="mb-3">
                                                    <label for="studentCode" class="form-label">كود الطالب</label>
                                                    <input type="text" class="form-control" id="studentCode" placeholder="أدخل كود الطالب">
                                                </div>
                                            </div>
                                            <div class="col-md-6 d-flex align-items-end">
                                                <button type="submit" class="btn btn-primary">بحث</button>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-6">
                                                <input type="text" id="tableFilterInline" class="form-control" placeholder="فلتر سريع داخل الجدول (الاسم/الكود/الحالة)">
                                            </div>
                                        </div>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Student Details Card (Hidden by default) -->
                    <div class="row mt-3" id="studentDetailsContainer" style="display: none;">
                        <div class="col-md-12">
                            <div class="card">
                                <div class="card-header bg-success text-white">
                                    <h5 class="mb-0">بيانات الطالب</h5>
                                </div>
                                <div class="card-body">
                                    <div class="row">
                                        <div class="col-md-6">
                                            <ul class="list-group">
                                                <li class="list-group-item d-flex justify-content-between">
                                                    <span>اسم الطالب:</span>
                                                    <strong id="detailUsername"></strong>
                                                </li>
                                                <li class="list-group-item d-flex justify-content-between">
                                                    <span>كود الطالب:</span>
                                                    <strong id="detailCode"></strong>
                                                </li>
                                                <li class="list-group-item d-flex justify-content-between">
                                                    <span>رقم هاتف الطالب:</span>
                                                    <strong id="detailPhone"></strong>
                                                </li>
                                                <li class="list-group-item d-flex justify-content-between">
                                                    <span>رقم هاتف ولي الأمر:</span>
                                                    <strong id="detailParentPhone"></strong>
                                                </li>
                                            </ul>
                                        </div>
                                        <div class="col-md-6">
                                            <ul class="list-group">
                                                <li class="list-group-item d-flex justify-content-between">
                                                    <span>السنتر:</span>
                                                    <strong id="detailCenter"></strong>
                                                </li>
                                                <li class="list-group-item d-flex justify-content-between">
                                                    <span>الصف:</span>
                                                    <strong id="detailGrade"></strong>
                                                </li>
                                                <li class="list-group-item d-flex justify-content-between">
                                                    <span>النوع:</span>
                                                    <strong id="detailGradeType"></strong>
                                                </li>
                                                <li class="list-group-item d-flex justify-content-between">
                                                    <span>المجموعة:</span>
                                                    <strong id="detailGroupTime"></strong>
                                                </li>
                                            </ul>
                                        </div>
                                    </div>
                                    <div class="row mt-3">
                                        <div class="col-md-6">
                                            <ul class="list-group">
                                                <li class="list-group-item d-flex justify-content-between">
                                                    <span>المبلغ:</span>
                                                    <strong id="detailBalance"></strong>
                                                </li>
                                                <li class="list-group-item d-flex justify-content-between">
                                                    <span>المبلغ المتبقي:</span>
                                                    <strong id="detailAmountRemaining"></strong>
                                                </li>
                                            </ul>
                                        </div>
                                        <div class="col-md-6">
                                            <ul class="list-group">
                                                <li class="list-group-item d-flex justify-content-between">
                                                    <span>عدد مرات الغياب:</span>
                                                    <strong id="detailAbsences"></strong>
                                                </li>
                                                <li class="list-group-item d-flex justify-content-between">
                                                    <span>نوع الحضور:</span>
                                                    <strong id="detailAttendingType"></strong>
                                                </li>
                                            </ul>
                                        </div>
                                    </div>
                                    <div class="row mt-3" id="blockingInfoSection" style="display: none;">
                                        <div class="col-md-12">
                                            <div class="alert alert-danger">
                                                <h5><i class="fa-solid fa-ban"></i> الطالب موقوف</h5>
                                                <ul class="list-group">
                                                    <li class="list-group-item d-flex justify-content-between">
                                                        <span>سبب الإيقاف:</span>
                                                        <strong id="detailBlockReason"></strong>
                                                    </li>
                                                    <li class="list-group-item d-flex justify-content-between">
                                                        <span>تاريخ الإيقاف:</span>
                                                        <strong id="detailBlockedAt"></strong>
                                                    </li>
                                                    <li class="list-group-item d-flex justify-content-between">
                                                        <span>تم الإيقاف بواسطة:</span>
                                                        <strong id="detailBlockedBy"></strong>
                                                    </li>
                                                </ul>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row mt-3">
                                        <div class="col-md-12 text-center">
                                            <button type="button" class="btn btn-primary me-2" onclick="editAdvancedStudent()">
                                                تعديل البيانات <i class="fa-solid fa-pen-to-square"></i>
                                            </button>
                                            <button type="button" class="btn btn-warning me-2" id="blockStudentBtn" onclick="showBlockStudentModal()" style="display: none;">
                                                إيقاف الطالب <i class="fa-solid fa-ban"></i>
                                            </button>
                                            <button type="button" class="btn btn-success me-2" id="unblockStudentBtn" onclick="showUnblockStudentModal()" style="display: none;">
                                                إعادة التفعيل <i class="fa-solid fa-check"></i>
                                            </button>
                                            <button type="button" class="btn btn-info me-2" onclick="showBlockHistory()">
                                                سجل الإيقافات <i class="fa-solid fa-history"></i>
                                            </button>
                                            <button type="button" class="btn btn-danger" onclick="deleteAdvancedStudent()">
                                                حذف الطالب <i class="fa-solid fa-trash"></i>
                                            </button>
                                            <button type="button" id="assignGroupBtn" class="btn btn-outline-info ms-2" style="display:none;">
                                                اضف إلى جروب
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <table id="convetToexcel" style="display: none;">
                        
                    </table>
                    <div class="row">
                        <div class="col-md-12  col-sm-12">
                            <div class="student-table">
                                <div class="d-flex align-items-center mb-2" dir="ltr">
                                    <div class="form-check me-3">
                                        <input class="form-check-input" type="checkbox" id="filterNoGroup">
                                        <label class="form-check-label" for="filterNoGroup">إظهار الطلاب بدون جروب فقط</label>
                                    </div>
                                    <button type="button" id="loadNoGroupBtn" class="btn btn-outline-primary btn-sm">تحميل</button>
                                </div>
                                <form action="/teacher/searchForUser" method="post">

                                    <div class="row" style="margin-bottom: 0 !important;">
                                        <div class="col-md-4">   
                                            <select name="searchBy" id="searchBy"  class="Grade" style="margin-top: -1rem;" >

                                                <option value="Username">الاسم</option>
                                                <option value="Code" selected>كود الطالب </option>
                                                <option value="phone" >رقم الهاتف</option>
                                                <option value="WhatsApp"> whatsapp </option>
                                                <option value="parentPhone"> رقم ولي الامر </option>
                                                
                                            </select>
                                        </div>
                                        <div class="col-md-4"> 
                                            <input type="text" class="mx-auto" name="searchInput" placeholder="بحث..">

                                        </div>
                                        <div class="col-md-4">  
                                            <div class="row">
                                                <div class="col-md-4">
                                                    <button  class="primary" ><i class="fa-solid fa-magnifying-glass"></i></button>

                                                </div>
                                                <% if (isSearching) { %>

                                                <div class="col-md-1 d-flex justify-content-center align-items-center ">
                                                    <button><a href="/teacher/studentsRequests"  class="primary" style="margin-bottom: 0; margin-top: 0 !important; cursor: pointer;" ><i class="fa-solid fa-x"></i></a></button>
                                                </div>

                                                <% } %>
                                            </div>
                                          
                                        </div>
                                    </div>
                                
                                   

                               
                              </form>
                                <table id="myTable">
                                    <thead>
                                        <th style="padding: 10px;"># </th>
                                        <th style="padding-left: 20px;">Student Name</th>
                                        <th style="padding-left: 20px;">Code</th>
                                        <th style="padding-left: 20px;">Status</th>
                                        <th style="padding-left: 20px;"> Created At</th>
                                        <th style="padding-left: 20px;"> Last Update</th>
                                        <th style="padding-left: 20px;"> Amount </th>
                                        <th style="padding-left: 20px;"> Amount Remaining</th>
                                        <th style="padding-left: 20px;"> Book Taken </th>

                                        <th style="padding-left: 20px;">View</th>
                                        <th style="padding-left: 20px;">اضف إلى جروب</th>
                                        <th style="padding-left: 20px;">Block/Unblock</th>
                                        <th style="padding-left: 20px;">Delete</th>
                                    </thead>

                                    <tbody >
                                     <% if (studentsRequests && studentsRequests.length>0) { %>
                                        <% let counter = 1; %>
                                            <% studentsRequests.forEach(student => { %>
                                           
                                                <tr>
                                                    <td><%= counter %></td>
                                                    <td  style="line-height: 20px;"><span ><i class="fa-solid "></i></span><%= student.Username %></td>
                                                    <td id="code" ><%= student.Code %></td>
                                                    <td>
                                                        <% if (student.blocked === true) { %>
                                                            <span class="badge bg-danger">
                                                                <i class="fa-solid fa-ban"></i> موقوف
                                                            </span>
                                                        <% } else { %>
                                                            <span class="badge bg-success">
                                                                <i class="fa-solid fa-check"></i> نشط
                                                            </span>
                                                        <% } %>
                                                    </td>
                                                    <td id="code" ><%= student.createdAt.toLocaleDateString() %></td>
                                                    <td id="code" ><%= student.updatedAt.toLocaleDateString() %></td>
                                                    <td id="code" ><%= student.balance %></td>
                                                    <td id="code" ><%= student.amountRemaining %></td>
                                                    <td>
                                                        <% if (student.bookTaken === true) { %>
                                                            <span class="badge bg-success">
                                                                <i class="fa-solid fa-book"></i> تم الاستلام
                                                            </span>
                                                        <% } else { %>
                                                            <span class="badge bg-warning">
                                                                <i class="fa-solid fa-book-open"></i> لم يتم الاستلام
                                                            </span>
                                                        <% } %>
                                                    </td>
                                           
                                                  
                                                
                                                    <td class="enter">
                                                      <button type="button" class="primary" data-bs-toggle="modal" data-bs-target="#exampleModal" data-id="<%= student._id %>" onclick="populateModal('<%= student._id %>')">
                                                      View Data<i class="fa-solid fa-pen-to-square me-3"></i>
                                                      </button>
                                                    </td>
                                                    <td class="enter">
                                                        <% const noGroup = !(student.centerName && student.Grade && student.gradeType && student.groupTime); %>
                                                        <% if (noGroup) { %>
                                                            <button type="button" class="btn btn-outline-info btn-sm" onclick="openAssignForCode('<%= student.Code %>')">اضف إلى جروب</button>
                                                        <% } else { %>
                                                            <span class="badge bg-secondary">موجود بجروب</span>
                                                        <% } %>
                                                    </td>
                                                    
                                                    <td class="enter">
                                                        <% if (student.blocked === true) { %>
                                                            <button type="button" class="btn btn-success btn-sm" onclick="showUnblockStudentModalRow('<%= student._id %>', '<%= student.Username %>')">
                                                                <i class="fa-solid fa-check"></i> إعادة التفعيل
                                                            </button>
                                                        <% } else { %>
                                                            <button type="button" class="btn btn-warning btn-sm" onclick="showBlockStudentModalRow('<%= student._id %>', '<%= student.Username %>')">
                                                                <i class="fa-solid fa-ban"></i> إيقاف 
                                                            </button>
                                                        <% } %>
                                                    </td>

                                                     <td class="enter">
                                                        <button type="button" class="btn btn-outline-danger" data-bs-toggle="modal" data-bs-target="#exampleModal2" data-id="<%= student._id %>" onclick="getIdToDelete('<%= student._id %>')">
                                                            Delete Account<i class="fa-solid fa-trash me-3"></i>
                                                        </button>
                                                        <!-- <button ><a href="/teacher/studentsRequests/delete/<%=student._id  %>" class="btn btn-outline-danger" style="color: rgb(255, 255, 255); border: 2px solid rgb(211, 0, 0); border-radius: 30px; padding: .7rem;" >Delete Account<i class="fa-solid fa-trash me-3" ></i></a> </button>  -->
                                                    </td>
                                                </tr>

                                            <% counter++; %>

                                            <% }) %>
                                   
                                        <% } else { %>
                                            <tr style="text-align: center;">
                                                <td colspan="9">
                                                    <h1>لا يوجد .. يمكنك التأكد من البحث مجددا </h1>
                                                </td>
                                            </tr>
                                        <% } %>
                                    </tbody>
                                </table>

                            </div>
                            <div class="pagination justify-content-between">
                                        
                                <div>
                                    <% if (nextPage !== null) { %>
                                        <a href="/teacher/studentsRequests?Grade=<%= Grade %>&page=<%= nextPage %>" > <button class="paginationBtns">Next</button> </a>
                                    <% } %>
                                </div>

                                <div>
                                    <form action="/teacher/converStudentRequestsToExcel" method="post">
                                        <button class="paginationBtns">Convert To Excel</button> 
                                    </form>
                        
                                </div>
                                <div>
                                    <% if (previousPage !== null) { %>
                                        <a href="/teacher/studentsRequests?Grade=<%= Grade %>&page=<%= previousPage %>" >  <button class="paginationBtns"> Previous</button></a>
                                    <% } %>
                                </div>
                            </div>


                        </div>
                    </div>
                </main>
            </div>

            <!-------------------- END OF MAIN --------------------->
         
        </div>
    </div>



    <script src="/assest/bootstrap.bundle.min.js"></script>
    <script src="/assest/bootstrap.min.js"></script>

 <%- include("../partials/group.ejs") %>




<script>
    const spinner = document.getElementById('spinner');
    function populateModal(id){
      console.log(id)
      
      spinner.classList.remove('d-none');
      fetch(`/teacher/studentsRequests/${id}`)
        .then(response => response.json())
        .then(data => {
          console.log(data)
          document.getElementById('ModalUserName').value = data.Username;
          document.getElementById('ModalUserphone').value = data.phone;
          document.getElementById('ModalParentUserphone').value = data.parentPhone;
          document.getElementById('ModalUserAmount').value = data.balance;
          document.getElementById('amountRemaining').value = data.amountRemaining;
          document.getElementById('absences').value = data.absences;
          document.getElementById('GradeLevel').value = data.GradeLevel;
          document.getElementById('attendingType').value = data.attendingType;
          document.getElementById('bookTaken').value = data.bookTaken;
          document.getElementById('schoolName').value = data.schoolName;
          document.getElementById('StudentID').value = data._id;
          spinner.classList.add('d-none');
        })
        .catch(error => {
          console.error('Error fetching student data:', error)
          spinner.classList.add('d-none');
        });
    }



    const formModalDataUpdate = document.getElementById('formModalDataUpdate');
    formModalDataUpdate.addEventListener('submit', (e) => {
      e.preventDefault();
      spinner.classList.remove('d-none');
      const id = document.getElementById('StudentID').value;
      const data = {
        Username: document.getElementById('ModalUserName').value,
        phone: document.getElementById('ModalUserphone').value,
        parentPhone: document.getElementById('ModalParentUserphone').value,
        balance: document.getElementById('ModalUserAmount').value,
        amountRemaining: document.getElementById('amountRemaining').value,
        absences: document.getElementById('absences').value,
        GradeLevel: document.getElementById('GradeLevel').value,
        attendingType: document.getElementById('attendingType').value,
        bookTaken: document.getElementById('bookTaken').value,
        schoolName: document.getElementById('schoolName').value,

      };
      console.log(data)
      fetch(`/teacher/updateUserData/${id}`, {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(data)
      })
        .then(response => response.json())
        .then(data => {
          console.log('Success:', data);
          location.reload();
        })
        .catch((error) => {
          console.error('Error:', error);
        });
    });

</script>


<script>
    const deleteForm = document.getElementById('deleteForm');
    function getIdToDelete(id){
        deleteForm.setAttribute('action', `/teacher/studentsRequests/delete/${id}`);
    }

    deleteForm.addEventListener('submit', async (e) => {
      e.preventDefault();
      spinner.classList.remove('d-none');
    const response = await fetch(deleteForm.getAttribute('action'), {
        method: 'DELETE',
        headers: {
          'Content-Type': 'application/json'
        }
      })
        const data = await response.json();
        console.log(data)

        if (response.ok) {
            location.reload();
        }else{
            console.log('error')
        }

    });

    // Block student form submission
    document.getElementById('blockStudentForm').addEventListener('submit', function(e) {
      e.preventDefault();
      
      // Get student ID from either advanced search or table row
      const studentId = window.advancedStudentId || window.currentStudentId;
      if (!studentId) {
        alert('لم يتم العثور على بيانات الطالب');
        return;
      }
      
      const reason = document.getElementById('blockReason').value.trim();
      if (!reason) {
        alert('يرجى إدخال سبب الإيقاف');
        return;
      }
      
      // Show spinner
      const spinner = document.getElementById('spinner');
      if (spinner) spinner.classList.remove('d-none');
      
      fetch(`/teacher/blockStudent/${studentId}`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ reason: reason })
      })
      .then(response => response.json())
      .then(data => {
        if (spinner) spinner.classList.add('d-none');
        
        if (data.message) {
          alert(data.message);
          // Close modal and refresh page
          const modal = bootstrap.Modal.getInstance(document.getElementById('blockStudentModal'));
          modal.hide();
          location.reload();
        } else {
          alert('حدث خطأ أثناء إيقاف الطالب');
        }
      })
      .catch(error => {
        if (spinner) spinner.classList.add('d-none');
        console.error('Error:', error);
        alert('حدث خطأ أثناء إيقاف الطالب');
      });
    });

    // Unblock student form submission
    document.getElementById('unblockStudentForm').addEventListener('submit', function(e) {
      e.preventDefault();
      
      // Get student ID from either advanced search or table row
      const studentId = window.advancedStudentId || window.currentStudentId;
      if (!studentId) {
        alert('لم يتم العثور على بيانات الطالب');
        return;
      }
      
      const reason = document.getElementById('unblockReason').value.trim();
      
      // Show spinner
      const spinner = document.getElementById('spinner');
      if (spinner) spinner.classList.remove('d-none');
      
      fetch(`/teacher/unblockStudent/${studentId}`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ reason: reason })
      })
      .then(response => response.json())
      .then(data => {
        if (spinner) spinner.classList.add('d-none');
        
        if (data.message) {
          alert(data.message);
          // Close modal and refresh page
          const modal = bootstrap.Modal.getInstance(document.getElementById('unblockStudentModal'));
          modal.hide();
          location.reload();
        } else {
          alert('حدث خطأ أثناء إعادة تفعيل الطالب');
        }
      })
      .catch(error => {
        if (spinner) spinner.classList.add('d-none');
        console.error('Error:', error);
        alert('حدث خطأ أثناء إعادة تفعيل الطالب');
      });
    });


</script>

<!-- Advanced Search JavaScript -->
<script>
  document.getElementById('advancedSearchForm').addEventListener('submit', function(e) {
    e.preventDefault();
    const studentCode = document.getElementById('studentCode').value.trim();
    
    if (!studentCode) {
      alert('الرجاء إدخال كود الطالب');
      return;
    }
    
    // Show loading spinner
    const spinner = document.getElementById('spinner');
    if (spinner) spinner.classList.remove('d-none');
    
    fetch(`/teacher/advancedStudentSearch/${studentCode}`)
      .then(response => {
        if (!response.ok) {
          throw new Error('Student not found');
        }
        return response.json();
      })
      .then(data => {
        // Hide spinner
        if (spinner) spinner.classList.add('d-none');
        
        // Populate student details
        document.getElementById('detailUsername').textContent = data.Username || 'غير متوفر';
        document.getElementById('detailCode').textContent = data.Code || 'غير متوفر';
        document.getElementById('detailPhone').textContent = data.phone || 'غير متوفر';
        document.getElementById('detailParentPhone').textContent = data.parentPhone || 'غير متوفر';
        document.getElementById('detailCenter').textContent = data.centerName || 'غير متوفر';
        document.getElementById('detailGrade').textContent = data.Grade || 'غير متوفر';
        document.getElementById('detailGradeType').textContent = data.gradeType || 'غير متوفر';
        document.getElementById('detailGroupTime').textContent = data.groupInfo ? data.groupInfo.displayText : data.groupTime || 'غير متوفر';
        document.getElementById('detailBalance').textContent = data.balance || '0';
        document.getElementById('detailAmountRemaining').textContent = data.amountRemaining || '0';
        document.getElementById('detailAbsences').textContent = data.absences || '0';
        document.getElementById('detailAttendingType').textContent = data.attendingType || 'غير متوفر';
        
        // Handle blocking information
        if (data.blocked) {
          document.getElementById('detailBlockReason').textContent = data.blockReason || 'غير محدد';
          document.getElementById('detailBlockedAt').textContent = data.blockedAt ? new Date(data.blockedAt).toLocaleDateString('ar-EG') : 'غير محدد';
          document.getElementById('detailBlockedBy').textContent = data.blockedBy || 'غير محدد';
          document.getElementById('blockingInfoSection').style.display = 'block';
          
          // Show/hide appropriate buttons
          document.getElementById('blockStudentBtn').style.display = 'none';
          document.getElementById('unblockStudentBtn').style.display = 'inline-block';
        } else {
          document.getElementById('blockingInfoSection').style.display = 'none';
          document.getElementById('blockStudentBtn').style.display = 'inline-block';
          document.getElementById('unblockStudentBtn').style.display = 'none';
        }
        
        // Store student data for operations
        window.advancedStudentId = data._id;
        window.advancedStudentData = data;
        // Toggle assign button visibility (show if not in group)
        const assignBtn = document.getElementById('assignGroupBtn');
        const hasGroup = Boolean(data.centerName && data.Grade && data.gradeType && data.groupTime);
        assignBtn.style.display = hasGroup ? 'none' : 'inline-block';
        
        // Show the student details container
        document.getElementById('studentDetailsContainer').style.display = 'block';
      })
      .catch(error => {
        // Hide spinner
        if (spinner) spinner.classList.add('d-none');
        
        alert('لم يتم العثور على الطالب. الرجاء التحقق من الكود المدخل.');
        console.error('Error:', error);
        
        // Hide the student details container if visible
        document.getElementById('studentDetailsContainer').style.display = 'none';
      });
  });

  // Inline quick filter
  const filterInput = document.getElementById('tableFilterInline');
  if (filterInput) {
    filterInput.addEventListener('input', () => {
      const q = filterInput.value.toLowerCase();
      const rows = document.querySelectorAll('#myTable tbody tr');
      rows.forEach(r => {
        const text = r.innerText.toLowerCase();
        r.style.display = text.includes(q) ? '' : 'none';
      });
    });
  }

  // Load students without group (optional filters)
  const loadNoGroupBtn = document.getElementById('loadNoGroupBtn');
  const filterNoGroup = document.getElementById('filterNoGroup');
  if (loadNoGroupBtn && filterNoGroup) {
    loadNoGroupBtn.addEventListener('click', async () => {
      const isChecked = filterNoGroup.checked;
      if (!isChecked) {
        alert('فعّل خيار إظهار الطلاب بدون جروب');
        return;
      }

      // Optionally pick current selects if present
      const center = document.getElementById('centerName')?.value || '';
      const grade = document.getElementById('Grade')?.value || '';
      const type = document.getElementById('gradeType')?.value || '';

      const params = new URLSearchParams();
      if (center) params.append('centerName', center);
      if (grade) params.append('Grade', grade);
      if (type) params.append('gradeType', type);

      const res = await fetch('/teacher/students/no-group' + (params.toString() ? `?${params.toString()}` : ''));
      const data = await res.json();
      if (!res.ok) { alert(data.message || 'فشل تحميل الطلاب'); return; }

      const tbody = document.querySelector('#myTable tbody');
      tbody.innerHTML = '';
      let c = 0;
      data.students.forEach(student => {
        c++;
        const tr = document.createElement('tr');
        tr.innerHTML = `
          <td>${c}</td>
          <td style="line-height: 20px;">${student.Username}</td>
          <td id="code">${student.Code}</td>
          <td><span class="badge bg-success">نشط</span></td>
          <td>${student.createdAt ? new Date(student.createdAt).toLocaleDateString('ar-EG') : ''}</td>
          <td>${student.updatedAt ? new Date(student.updatedAt).toLocaleDateString('ar-EG') : ''}</td>
          <td>${student.balance ?? 0}</td>
          <td>${student.amountRemaining ?? 0}</td>
          <td><span class="badge bg-warning"><i class="fa-solid fa-book-open"></i> -</span></td>
          <td class="enter">
            <button type="button" class="primary" data-bs-toggle="modal" data-bs-target="#exampleModal" onclick="populateModal('${student._id || ''}')">View Data<i class="fa-solid fa-pen-to-square me-3"></i></button>
          </td>
          <td class="enter">
            <button type="button" class="btn btn-outline-info btn-sm" onclick="openAssignForCode('${student.Code}')">اضف إلى جروب</button>
          </td>
          <td class="enter">
            <button type="button" class="btn btn-warning btn-sm" disabled><i class="fa-solid fa-ban"></i></button>
          </td>
          <td class="enter">
            <button type="button" class="btn btn-outline-danger" disabled>Delete<i class="fa-solid fa-trash me-3"></i></button>
          </td>
        `;
        tbody.appendChild(tr);
      });
    });
  }

  // Assign to group flow (modal injected on demand)
  const assignBtn = document.getElementById('assignGroupBtn');
  if (assignBtn) {
    assignBtn.addEventListener('click', async () => {
      if (!window.advancedStudentData) return;
      const modalHtml = `
<div class="modal fade" id="assignModal" tabindex="-1" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content bg-dark text-white">
      <div class="modal-header">
        <h5 class="modal-title">إسناد الطالب إلى جروب</h5>
        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <div class="mb-2">
          <label class="form-label">السنتر</label>
          <select id="mCenter" class="form-select"></select>
        </div>
        <div class="mb-2">
          <label class="form-label">الصف</label>
          <select id="mGrade" class="form-select"></select>
        </div>
        <div class="mb-2">
          <label class="form-label">النوع</label>
          <select id="mType" class="form-select"></select>
        </div>
        <div class="mb-2">
          <label class="form-label">المجموعة</label>
          <select id="mTime" class="form-select"></select>
        </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">إلغاء</button>
        <button type="button" id="confirmAssign" class="btn btn-primary">إسناد</button>
      </div>
    </div>
  </div>
</div>`;

      // Inject once
      if (!document.getElementById('assignModal')) {
        document.body.insertAdjacentHTML('beforeend', modalHtml);
      }
      const assignModalEl = document.getElementById('assignModal');
      const modal = new bootstrap.Modal(assignModalEl);

      // Load options
      const res = await fetch('/teacher/groupOptions');
      const opts = await res.json();
      if (!res.ok) { alert(opts.message || 'فشل في تحميل بيانات الجروبات'); return; }
      const mCenter = document.getElementById('mCenter');
      const mGrade = document.getElementById('mGrade');
      const mType = document.getElementById('mType');
      const mTime = document.getElementById('mTime');
      mCenter.innerHTML = `<option value="">اختر</option>` + opts.centers.map(c=>`<option value="${c}">${c}</option>`).join('');
      mGrade.innerHTML = '';
      mType.innerHTML = '';
      mTime.innerHTML = '';

      const updateGrades = () => {
        const center = mCenter.value;
        const grades = opts.centerNames[center] || [];
        mGrade.innerHTML = `<option value="">اختر</option>` + grades.map(g=>`<option value="${g.value}">${g.text}</option>`).join('');
        mType.innerHTML = '';
        mTime.innerHTML = '';
      };
      const updateTypes = () => {
        const grade = mGrade.value;
        const types = opts.gradeTypeOptions[grade] || [];
        mType.innerHTML = `<option value="">اختر</option>` + types.map(t=>`<option value="${t.value}">${t.text}</option>`).join('');
        mTime.innerHTML = '';
      };
      const updateTimes = () => {
        const center = mCenter.value;
        const grade = mGrade.value;
        const type = mType.value;
        const times = opts.groupTimes?.[center]?.[grade]?.[type] || [];
        mTime.innerHTML = `<option value="">اختر</option>` + times.map(t=>`<option value="${t.value}">${t.text}</option>`).join('');
      };

      mCenter.onchange = updateGrades;
      mGrade.onchange = updateTypes;
      mType.onchange = updateTimes;

      modal.show();

      document.getElementById('confirmAssign').onclick = async () => {
        const payload = {
          centerName: mCenter.value,
          Grade: mGrade.value,
          gradeType: mType.value,
          groupTime: mTime.value,
        };
        if (!payload.centerName || !payload.Grade || !payload.gradeType || !payload.groupTime) {
          alert('الرجاء اختيار كل الحقول');
          return;
        }
        const code = window.advancedStudentData?.Code;
      const res2 = await fetch(`/teacher/transferStudent/${encodeURIComponent(code)}`, {
          method: 'PUT',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(payload)
        });
        const d2 = await res2.json();
        if (!res2.ok) { alert(d2.message || 'فشل الإسناد'); return; }
        modal.hide();
        // refresh header and toggle button if details section exists
        const detailCenter = document.getElementById('detailCenter');
        if (detailCenter) {
          detailCenter.textContent = payload.centerName;
          document.getElementById('detailGrade').textContent = payload.Grade;
          document.getElementById('detailGradeType').textContent = payload.gradeType;
          document.getElementById('detailGroupTime').textContent = payload.groupTime;
          document.getElementById('assignGroupBtn').style.display = 'none';
        }
        // also update row button to badge
        const rows = document.querySelectorAll('#myTable tbody tr');
        rows.forEach(tr => {
          if (tr.querySelector && tr.querySelector('#code') && tr.querySelector('#code').innerText.trim() === code) {
            const cells = tr.querySelectorAll('td');
            if (cells && cells.length > 0) {
              const addBtnCell = cells[cells.length - 3]; // View, Add, Block, Delete -> Add is third from end
              if (addBtnCell) addBtnCell.innerHTML = '<span class="badge bg-secondary">موجود بجروب</span>';
            }
          }
        });
        alert('تم الإسناد بنجاح');
      };
    });
  }
  
  // Function to edit the student from advanced search
  function editAdvancedStudent() {
    if (!window.advancedStudentId) {
      alert('لم يتم العثور على بيانات الطالب');
      return;
    }
    
    // Use the existing modal to edit student
    populateModal(window.advancedStudentId);
    
    // Show the modal
    const modal = new bootstrap.Modal(document.getElementById('exampleModal'));
    modal.show();
  }
  
  // Open assign modal for a specific code (row-level action)
  async function openAssignForCode(code) {
    // Reuse the same modal builder as advanced search assign button
    const assignBtn = document.getElementById('assignGroupBtn');
    if (!assignBtn) return;
    // Ensure advancedStudentData has Code
    window.advancedStudentData = { Code: code };
    assignBtn.click();
  }

  // Function to delete the student from advanced search
  function deleteAdvancedStudent() {
    if (!window.advancedStudentId) {
      alert('لم يتم العثور على بيانات الطالب');
      return;
    }
    
    // Use the existing delete functionality
    getIdToDelete(window.advancedStudentId);
    
    // Show the delete confirmation modal
    const modal = new bootstrap.Modal(document.getElementById('exampleModal2'));
    modal.show();
  }

  // Function to show block student modal
  function showBlockStudentModal() {
    if (!window.advancedStudentId || !window.advancedStudentData) {
      alert('لم يتم العثور على بيانات الطالب');
      return;
    }
    
    document.getElementById('blockStudentName').textContent = window.advancedStudentData.Username;
    document.getElementById('blockReason').value = '';
    
    const modal = new bootstrap.Modal(document.getElementById('blockStudentModal'));
    modal.show();
  }

  // Function to show unblock student modal
  function showUnblockStudentModal() {
    if (!window.advancedStudentId || !window.advancedStudentData) {
      alert('لم يتم العثور على بيانات الطالب');
      return;
    }
    
    document.getElementById('unblockStudentName').textContent = window.advancedStudentData.Username;
    document.getElementById('unblockReason').value = '';
    
    const modal = new bootstrap.Modal(document.getElementById('unblockStudentModal'));
    modal.show();
  }

  // Function to show block history
  function showBlockHistory() {
    if (!window.advancedStudentId || !window.advancedStudentData) {
      alert('لم يتم العثور على بيانات الطالب');
      return;
    }
    
    document.getElementById('historyStudentName').textContent = window.advancedStudentData.Username;
    
    // Show loading spinner
    document.getElementById('blockHistoryContent').innerHTML = '<div class="text-center"><div class="spinner mx-auto"></div></div>';
    
    const modal = new bootstrap.Modal(document.getElementById('blockHistoryModal'));
    modal.show();
    
    // Fetch block history
    fetch(`/teacher/blockHistory/${window.advancedStudentId}`)
      .then(response => response.json())
      .then(data => {
        if (data.blockHistory && data.blockHistory.length > 0) {
          let historyHTML = '<div class="table-responsive"><table class="table table-striped">';
          historyHTML += '<thead><tr><th>الإجراء</th><th>السبب</th><th>التاريخ</th><th>بواسطة</th></tr></thead><tbody>';
          
          data.blockHistory.forEach(record => {
            const date = new Date(record.timestamp).toLocaleDateString('ar-EG');
            const time = new Date(record.timestamp).toLocaleTimeString('ar-EG');
            const actionText = record.action === 'blocked' ? 'إيقاف' : 'إعادة تفعيل';
            const actionClass = record.action === 'blocked' ? 'text-danger' : 'text-success';
            
            historyHTML += `<tr>
              <td class="${actionClass}"><strong>${actionText}</strong></td>
              <td>${record.reason || 'لا يوجد سبب'}</td>
              <td>${date} ${time}</td>
              <td>${record.blockedBy || record.unblockedBy || 'غير محدد'}</td>
            </tr>`;
          });
          
          historyHTML += '</tbody></table></div>';
          document.getElementById('blockHistoryContent').innerHTML = historyHTML;
        } else {
          document.getElementById('blockHistoryContent').innerHTML = '<div class="alert alert-info">لا يوجد سجل إيقافات لهذا الطالب</div>';
        }
      })
      .catch(error => {
        console.error('Error fetching block history:', error);
        document.getElementById('blockHistoryContent').innerHTML = '<div class="alert alert-danger">حدث خطأ في جلب سجل الإيقافات</div>';
      });
  }

  // Function to show block student modal from table row
  function showBlockStudentModalRow(studentId, studentName) {
    window.currentStudentId = studentId;
    window.currentStudentName = studentName;
    
    document.getElementById('blockStudentName').textContent = studentName;
    document.getElementById('blockReason').value = '';
    
    const modal = new bootstrap.Modal(document.getElementById('blockStudentModal'));
    modal.show();
  }

  // Function to show unblock student modal from table row
  function showUnblockStudentModalRow(studentId, studentName) {
    window.currentStudentId = studentId;
    window.currentStudentName = studentName;
    
    document.getElementById('unblockStudentName').textContent = studentName;
    document.getElementById('unblockReason').value = '';
    
    const modal = new bootstrap.Modal(document.getElementById('unblockStudentModal'));
    modal.show();
  }
</script>

</body>


</html>